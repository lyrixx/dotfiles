#!/bin/bash

# http://stackoverflow.com/questions/3432536/create-session-if-none-exists/7231728#7231728
# http://stackoverflow.com/questions/5447278/bash-scripts-with-tmux-to-launch-a-4-paned-window/7720881#7720881

SESSIONS="rio labs orpi"

function session-rio {
    tmux new-session -d -s $1 -n root   -c $HOME/dev/github.com/jolicode/redirection.io
    tmux new-window -t $1 -n DB         -c $HOME/dev/github.com/jolicode/redirection.io
    tmux split-window -v                -c $HOME/dev/github.com/jolicode/redirection.io
    tmux new-window -t $1 -n backend    -c $HOME/dev/github.com/jolicode/redirection.io/server/backend
    tmux new-window -t $1 -n shell      -c $HOME/dev/github.com/jolicode/redirection.io
    tmux new-window -t $1 -n manager    -c $HOME/dev/github.com/jolicode/redirection.io/server/manager
    tmux new-window -t $1 -n agent      -c $HOME/dev/github.com/jolicode/redirection.io/agent
    tmux split-window -v                -c $HOME/dev/github.com/jolicode/redirection.io
    tmux new-window -t $1 -n test       -c $HOME/dev/github.com/jolicode/redirection.io/
    tmux new-window -t $1 -n infra      -c $HOME/dev/github.com/jolicode/redirection.io/infrastructure
}

function session-labs {
    tmux new-session -d -s $1 -n castor -c $HOME/dev/github.com/jolicode/castor
    tmux new-window -t $1 -n DS         -c $HOME/dev/github.com/jolicode/docker-starter
    tmux new-window -t $1 -n monologue  -c $HOME/dev/github.com/jolicode/monologue
    tmux new-window -t $1 -n qotd       -c $HOME/dev/github.com/jolicode/qotd
    tmux new-window -t $1 -n SF         -c $HOME/dev/github.com/lyrixx/symfony
    tmux new-window -t $1 -n SF/app     -c $HOME/dev/labs/symfony/symfony-6.4/
}

function session-orpi {
    tmux new-session -d -s $1 -n root   -c $HOME/dev/github.com/jolicode/orpi
    tmux new-window -t $1 -n shell      -c $HOME/dev/github.com/jolicode/orpi
}

function session-faume {
    tmux new-session -d -s $1 -n root   -c $HOME/dev/github.com/Faume-co/modules-shopify
    tmux new-window -t $1 -n DB         -c $HOME/dev/github.com/Faume-co/modules-shopify
    tmux new-window -t $1 -n docker     -c $HOME/dev/github.com/Faume-co/docker-stack
}

function session-shut {
    tmux new-session -d -s $1 -n root   -c $HOME/dev/github.com/lyrixx/shut
    tmux new-window -t $1 -n docker     -c $HOME/dev/github.com/lyrixx/shut
    tmux new-window -t $1 -n DB         -c $HOME/dev/github.com/lyrixx/shut
}

function session-cer {
    tmux new-session -d -s $1 -n root   -c $HOME/dev/cerfrance/heisenberg-master
    tmux new-window -t $1 -n docker     -c $HOME/dev/cerfrance/heisenberg-master
    tmux new-window -t $1 -n DB         -c $HOME/dev/cerfrance/heisenberg-master
}

# Global

for session in $SESSIONS; do
    echo -n "$session ... "
    tmux has-session -t $session 2>/dev/null
    if [[ $? == 0 ]]; then
        echo "already exist."
        continue
    fi

    session-$session $session
    echo "created."
done

